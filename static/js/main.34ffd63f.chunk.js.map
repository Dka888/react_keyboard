{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","state","key","handleClick","setState","document","addEventListener","this","removeEventListener","condition","className","React","Component","ReactDOM","render","getElementById"],"mappings":"oNAMaA,EAAb,4MACEC,MAAQ,CACNC,KAAK,GAFT,EAaEC,YAAc,WACZ,EAAKC,SAAS,CAAEF,KAAK,KAdzB,uDAKE,WACEG,SAASC,iBAAiB,QAASC,KAAKJ,eAN5C,kCASE,WACEE,SAASG,oBAAoB,QAASD,KAAKJ,eAV/C,oBAiBE,WACE,IAAMM,EAAYF,KAAKN,MAAMC,IAE7B,OACE,qBAAKQ,UAAU,MAAf,SACE,mBAAGA,UAAU,eAAb,SACGD,EACG,kCACA,kCAzBd,GAAyBE,IAAMC,W,MCD/BC,IAASC,OACP,cAAC,EAAD,IACAT,SAASU,eAAe,W","file":"static/js/main.34ffd63f.chunk.js","sourcesContent":["import React from 'react';\n\ntype State = {\n  key: boolean,\n};\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    key: false,\n  };\n\n  componentDidMount(): void {\n    document.addEventListener('keyup', this.handleClick);\n  }\n\n  componentWillUnmount(): void {\n    document.removeEventListener('keyup', this.handleClick);\n  }\n\n  handleClick = () => {\n    this.setState({ key: true });\n  };\n\n  render() {\n    const condition = this.state.key;\n\n    return (\n      <div className=\"App\">\n        <p className=\"App__message\">\n          {condition\n            ? 'The last pressed key is [Enter]'\n            : 'Nothing was pressed yet'}\n        </p>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}